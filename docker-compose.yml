services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: valyr-postgres
    environment:
      POSTGRES_DB: valyr_dev
      POSTGRES_USER: valyr
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U valyr -d valyr_dev"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - valyr-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: valyr-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - valyr-network

  # IPFS Node
  ipfs:
    image: ipfs/kubo:latest
    container_name: valyr-ipfs
    ports:
      - "4001:4001"     # P2P
      - "5001:5001"     # API
      - "8080:8080"     # Gateway
    volumes:
      - ipfs_data:/data/ipfs
    networks:
      - valyr-network

  # Valyr Hub API
  hub-api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: valyr-hub
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://valyr:password@postgres:5432/valyr_dev
      REDIS_URL: redis://redis:6379
      IPFS_API_URL: http://ipfs:5001
      IPFS_GATEWAY_URL: http://ipfs:8080
      JWT_SECRET: your-super-secret-jwt-key-for-development
      LOG_LEVEL: info
      LOG_PRETTY: "true"
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      ipfs:
        condition: service_started
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
    networks:
      - valyr-network

  # Verifier Cluster
  verifier:
    build:
      context: .
      dockerfile: Dockerfile.verifier
    environment:
      NODE_ENV: development
      REDIS_URL: redis://redis:6379
      HUB_API_URL: http://hub-api:3000
      DATABASE_URL: postgresql://valyr:password@postgres:5432/valyr_dev
      JWT_SECRET: your-super-secret-jwt-key-for-development
      LOG_LEVEL: info
      LOG_PRETTY: "true"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      hub-api:
        condition: service_started
    networks:
      - valyr-network
    deploy:
      replicas: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: valyr-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - hub-api
    networks:
      - valyr-network

volumes:
  postgres_data:
  redis_data:
  ipfs_data:

networks:
  valyr-network:
    driver: bridge

